<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>从valine转向waline</title>
    <link href="/2021/10/31/%E4%BB%8Evaline%E8%BD%AC%E5%90%91waline/"/>
    <url>/2021/10/31/%E4%BB%8Evaline%E8%BD%AC%E5%90%91waline/</url>
    
    <content type="html"><![CDATA[<p>valine真的很舒服，因为自己深受注册登陆的烦恼，觉得根本不是多么重要的一个网页也需要获取我特意注册一个账户才能使用非常麻烦。valine可以把选择权交给用户，并且留下联系方式的过程也非常简单，这一点是我第一次看到valine，就选择其作为博客评论的选择，并为其特意设计了邮件通知系统。然而转头就发现了关于valine的安全性问题，具体参考文章<sup><a href="#fn_1" id="reffn_1">1</a></sup>。我并不是做前端的，对其中的一些概念并不了解，但是也能看出valine可能没有那么安全。基于此，我选择了在没有太深入绑定之前，转到waline的。</p><h3 id="原理简介"><a href="#原理简介" class="headerlink" title="原理简介"></a>原理简介</h3><p>我理解waline相比于valine，将评论功能拆分为两部分，让服务不直接接触存储，从而避免用户通过js命令行读写内存造成安全性问题。</p><ul><li>vercel上部署服务，通过ServerURL进行内存读写，也是评论功能的主要实现</li><li>leanCloud上进行数据的保存，在构建vercel时提供leanCloud的appID, appKey, masterKey信息。即对于vercel而言，leanCloud也是一个服务。</li></ul><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><p>参考<sup><a href="#fn_2" id="reffn_2">2</a></sup>，部署leanCloud, 部署vercel, hexo g -d重构…<br>vercel的部署参考<sup><a href="#fn_2" id="reffn_2">2</a></sup>，过程并不复杂。要注意github的邮箱如果之前勾选了保密，注意暂时先点掉，否则会出现vercel拷贝github上的reposity库时不成功的问题。说多了都是泪…</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><blockquote id="fn_1"><sup>1</sup>. <a href="https://imnerd.org/valine-may-not-so-good.html">基于Serverless的valine可能没有那么香</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote><blockquote id="fn_2"><sup>2</sup>. <a href="https://waline.js.org/guide/get-started.html#html-%E5%BC%95%E5%85%A5-%E5%AE%A2%E6%88%B7%E7%AB%AF">waline搭建</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a></blockquote><blockquote id="fn_3"><sup>3</sup>. <a href="https://waline.js.org/guide/get-started.html#html-%E5%BC%95%E5%85%A5-%E5%AE%A2%E6%88%B7%E7%AB%AF">更多waline功能</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a></blockquote>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
      <category>博客使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo和Github搭建公开文档（姑且称之为博客吧）</title>
    <link href="/2021/10/30/Hexo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E5%85%AC%E5%BC%80%E6%96%87%E6%A1%A3%EF%BC%88%E5%A7%91%E4%B8%94%E7%A7%B0%E4%B9%8B%E4%B8%BA%E5%8D%9A%E5%AE%A2%E5%90%A7%EF%BC%89/"/>
    <url>/2021/10/30/Hexo%E5%92%8CGithub%E6%90%AD%E5%BB%BA%E5%85%AC%E5%BC%80%E6%96%87%E6%A1%A3%EF%BC%88%E5%A7%91%E4%B8%94%E7%A7%B0%E4%B9%8B%E4%B8%BA%E5%8D%9A%E5%AE%A2%E5%90%A7%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>关于创建自己的博客，本科时就使用服务器和wordpress构建过好多次，无奈维护起来过于复杂，很多时候没有写文章的时间还不如维护的时间多。这次心血来潮，也明白了凡事由浅入深，写博客更主要的目的还是想整理一些系统的思考、学习。因此选择了维护和搭建更简单的github+hexo的方案。虽然是静态页面，但是后端通过markdown书写的方式，十分方便自己做一些笔记用。废话不多说，接下来就简单介绍下本次搭建的过程。</p><h3 id="在Github上创建一个reposity"><a href="#在Github上创建一个reposity" class="headerlink" title="在Github上创建一个reposity"></a>在Github上创建一个reposity</h3><p>reposity是一个项目仓库，就是我们平时fork的项目，简单说就是个高级点的文件夹</p><p>注意以下几个点：</p><ol><li><p>一定是Public，后面才能被公网上访问</p></li><li><p>创建完后，注意在setting中设置一下，才能使用username.github.io访问这个reposity</p></li><li><p>为了方便本地生成静态页面，后期都是git clone到本地，使用git进行维护</p></li></ol><h3 id="为博客选择一个模板"><a href="#为博客选择一个模板" class="headerlink" title="为博客选择一个模板"></a>为博客选择一个模板</h3><p>为了省去博客网页的维护，将主要精力放在内容的书写上。“博客生成器”，能够将文本文档有机的整合为html语言。github支持jekyll，类似的还有hexo，hugo,pelican等。</p><p>但是，由于jekyll对win10支持不够友好，一凡折腾之后还是选择了hexo。殊途同归。</p><p>这里给几个模板的例子：</p><ol><li><p><a href="https://zkqiang.cn/">https://zkqiang.cn/</a><br>很漂亮，但是首页的大图容易让人失去写作的专注。我还是想更多聚焦在内容的书写、管理和浏览上。但是看了一圈，这个是最合适的了，所以也是写本文时选用的模板。</p></li><li><p><a href="https://ares-x.com/categories/">https://ares-x.com/categories/</a><br>该方案适合随笔较多。Archives(归档)、Categories(类别)、Tags(标签)字体更小，能够看到更多内容。但是页面美观上就少了很多可能，实在遗憾。</p></li><li><p><a href="https://chhzh123.github.io/blogs/">https://chhzh123.github.io/blogs/</a><br>一个中山大学去了Cornell读PHD的大佬，博客也是非常棒，特别是最后的留言功能！各位如果看到本文由任何问题，也欢迎在下面留言。</p></li></ol><h3 id="hexo使用"><a href="#hexo使用" class="headerlink" title="hexo使用"></a>hexo使用</h3><ol><li><p>(可跳过)设定npm源，不然后面npm install很慢</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure></li><li><p>创建一个Blog文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ mkdir Blog<br>$ <span class="hljs-built_in">cd</span> Blog<br>$ hexo init<br>$ npm install<br></code></pre></td></tr></table></figure><p>结束后，能够看到Blog下面多了一堆文档</p></li><li><p>本地生成页面查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo -s<br></code></pre></td></tr></table></figure><p>然后在浏览器访问返回的链接</p></li><li><p>配置本地git账户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config -l<br>$ git config --global user.name &lt;github account username&gt;<br>$ git config --global user.emial &lt;github account email&gt;<br></code></pre></td></tr></table></figure><p>关于git，后面有可能遇到email和密码不能登陆的问题，问题不大，遇到了多百度，也可以在下面留言。这里主要是github对用户email公开的隐私问题以及密码登陆的安全性问题的限制。</p></li><li><p>链接本地文件和远程仓库<br>首先修改_config.yml文件，设定为自己reposity链接和branch分支。这里注意branch分支，github后来更改为mian了，不再是master。<br>然后执行下述命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g -d<br></code></pre></td></tr></table></figure><p>该命令过后，就相当于git push到了远程仓库。但是需要github反应一会，也可能是浏览器的页面缓存还没有失效，需要等待一会才能看到新的页面。</p></li><li><p>创建新页面<br>具体可以参考hexo官方手册</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new [layout] &lt;title&gt;<br></code></pre></td></tr></table></figure></li><li><p>生成器<br>生成文件，使用 Hexo 生成静态文件快速而且简单。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure></li><li><p>valine邮件提醒测试<br>主要参考链接<sup><a href="#fn_6" id="reffn_6">6</a></sup>。所谓邮件提醒，就是后台收到评论后，登陆一个邮箱发送通知给作者。因此需要一个发送邮箱，一个接收邮箱。发送邮箱需要提供密码，为了安全起见，我使用的是QQ邮箱向163邮箱通知。其中，QQ邮箱是我开的小号。最后，云引擎并不需要绑定一个域名，我测试也是成功的。</p></li></ol><ul><li>监视文件变动<br>Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate --watch<br></code></pre></td></tr></table></figure></li><li>完成后部署<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate --deploy <span class="hljs-comment"># 也可以简写乘 hexo g -d</span><br>(或)$ hexo deploy --generate <span class="hljs-comment"># 简写为hexo d -g</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><ol><li><p>Latex数学公式 测试</p><script type="math/tex; mode=display">E=mc^2</script><script type="math/tex; mode=display">\frac{\partial P(x, y)}{\partial x} = e^y\pi</script></li><li><p>Mermaid流程图 测试</p><pre><code class=" mermaid">classDiagramClass01 &lt;|-- AveryLongClass : CoolClass03 *-- Class04Class05 o-- Class06Class07 .. Class08Class09 --&gt; C2 : Where am i?Class09 --* C3Class09 --|&gt; Class07Class07 : equals()Class07 : Object[] elementDataClass01 : size()Class01 : int chimpClass01 : int gorillaClass08 &lt;--&gt; C2: Cool label</code></pre></li><li>OneDrive同步<br>测试</li></ol><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><blockquote id="fn_1"><sup>1</sup>. <a href="https://www.bilibili.com/video/BV1at4y1D7rr?from=search&amp;seid=9483946196476379073&amp;spm_id_from=333.337.0.0">hexo搭建个人博客</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote><blockquote id="fn_2"><sup>2</sup>. <a href="https://hexo.io/zh-cn/docs/setup">hexo官方手册</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a></blockquote><blockquote id="fn_3"><sup>3</sup>. <a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid Github</a><a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a></blockquote><blockquote id="fn_4"><sup>4</sup>. <a href="https://valine.js.org/hexo.html">留言功能 Valine</a><a href="#reffn_4" title="Jump back to footnote [4] in the text."> &#8617;</a></blockquote><blockquote id="fn_5"><sup>5</sup>. <a href="https://hexo.io/themes/">更多hexo主题</a><a href="#reffn_5" title="Jump back to footnote [5] in the text."> &#8617;</a></blockquote><blockquote id="fn_6"><sup>6</sup>. <a href="https://dreamhomes.top/posts/202102021138/">valine评论邮件提醒</a><a href="#reffn_6" title="Jump back to footnote [6] in the text."> &#8617;</a></blockquote><blockquote id="fn_7"><sup>7</sup>. <a href="https://markdown.com.cn/extended-syntax/footnotes.html">MarkDown官方手册</a><a href="#reffn_7" title="Jump back to footnote [7] in the text."> &#8617;</a></blockquote><blockquote id="fn_8"><sup>8</sup>. <a href="https://hexo.fluid-dev.com/posts/fluid-write/">Fluid作者的example博客</a><a href="#reffn_8" title="Jump back to footnote [8] in the text."> &#8617;</a></blockquote>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
      <category>博客使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
